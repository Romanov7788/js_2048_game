{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_define_property.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $cd5a47cf8ef6d766$export$71511d61b312f219(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\nfunction $09cbfe85151ea6c6$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$71511d61b312f219(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$71511d61b312f219(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$71511d61b312f219)(arr) || (0, $8ca2848f896a6803$export$71511d61b312f219)(arr, i) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr, i) || (0, $a0bc1859061deae1$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.board = initialState || this.createEmptyBoard();\n        this.score = 0;\n        this.status = Game.gameStatuses.idle;\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"saveBoardState\",\n            value: function saveBoardState() {\n                return JSON.parse(JSON.stringify(this.board));\n            }\n        },\n        {\n            key: \"hasBoardChanged\",\n            value: function hasBoardChanged(oldBoard, newBoard) {\n                for(var i = 0; i < oldBoard.length; i++)for(var j = 0; j < oldBoard[i].length; j++){\n                    if (oldBoard[i][j] !== newBoard[i][j]) return true;\n                }\n                return false;\n            }\n        },\n        {\n            key: \"addCells\",\n            value: function addCells() {\n                var count = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;\n                for(var i = 0; i < count; i++)this.addRandomTitle();\n            }\n        },\n        {\n            key: \"initializeGame\",\n            value: function initializeGame() {\n                var message = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"\";\n                this.board = this.createEmptyBoard();\n                this.score = 0;\n                this.addCells(2);\n                this.updateScoreDisplay();\n                this.showMessage(message);\n            }\n        },\n        {\n            key: \"updateScoreDisplay\",\n            value: function updateScoreDisplay() {\n                var scoreElement = document.querySelector(\".game-score\");\n                if (scoreElement) scoreElement.textContent = this.score;\n            }\n        },\n        {\n            key: \"createEmptyBoard\",\n            value: function createEmptyBoard() {\n                return Array(4).fill(null).map(function() {\n                    return Array(4).fill(0);\n                });\n            }\n        },\n        {\n            key: \"updateBoardDisplay\",\n            value: function updateBoardDisplay() {\n                var board = this.board;\n                var cells = document.querySelectorAll(\".field-cell\");\n                cells.forEach(function(cell, index) {\n                    var row = Math.floor(index / 4);\n                    var col = index % 4;\n                    cell.textContent = board[row][col] === 0 ? \"\" : board[row][col];\n                    cell.className = \"field-cell\";\n                    if (board[row][col] !== 0) cell.classList.add(\"tile-\".concat(board[row][col]));\n                });\n            }\n        },\n        {\n            key: \"addRandomTitle\",\n            value: function addRandomTitle() {\n                var emptyCells = [];\n                for(var i = 0; i < 4; i++){\n                    for(var j = 0; j < 4; j++)if (this.board[i][j] === 0) emptyCells.push([\n                        i,\n                        j\n                    ]);\n                }\n                if (emptyCells.length === 0) return;\n                var _emptyCells_Math_floor = (0, $efec029548ccee7f$export$71511d61b312f219)(emptyCells[Math.floor(Math.random() * emptyCells.length)], 2), randomRow = _emptyCells_Math_floor[0], randomCol = _emptyCells_Math_floor[1];\n                this.board[randomRow][randomCol] = Math.random() < 0.9 ? 2 : 4;\n                this.updateBoardDisplay();\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var board = this.board;\n                var oldBoard = this.saveBoardState();\n                var newBoard = Array.from({\n                    length: 4\n                }, function() {\n                    return Array(4).fill(0);\n                });\n                var score = 0;\n                for(var i = 0; i < 4; i++){\n                    var position = 0;\n                    for(var j = 0; j < 4; j++)if (board[i][j] !== 0) {\n                        if (newBoard[i][position] === board[i][j]) {\n                            newBoard[i][position] *= 2;\n                            score += newBoard[i][position];\n                            position++;\n                        } else if (newBoard[i][position] === 0) newBoard[i][position] = board[i][j];\n                        else {\n                            position++;\n                            newBoard[i][position] = board[i][j];\n                        }\n                    }\n                }\n                this.score += score;\n                this.board = newBoard;\n                if (this.hasBoardChanged(oldBoard, this.board)) this.addRandomTitle();\n                this.updateBoardDisplay();\n                this.updateScoreDisplay();\n                return this.score;\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var board = this.board;\n                var oldBoard = this.saveBoardState();\n                var newBoard = Array.from({\n                    length: 4\n                }, function() {\n                    return Array(4).fill(0);\n                });\n                var score = 0;\n                for(var i = 0; i < 4; i++){\n                    var position = 3;\n                    for(var j = 3; j >= 0; j--)if (board[i][j] !== 0) {\n                        if (newBoard[i][position] === board[i][j]) {\n                            newBoard[i][position] *= 2;\n                            score += newBoard[i][position];\n                            position--;\n                        } else if (newBoard[i][position] === 0) newBoard[i][position] = board[i][j];\n                        else {\n                            position--;\n                            newBoard[i][position] = board[i][j];\n                        }\n                    }\n                }\n                this.score += score;\n                this.board = newBoard;\n                if (this.hasBoardChanged(oldBoard, this.board)) this.addRandomTitle();\n                this.updateScoreDisplay();\n                return this.score;\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var board = this.board;\n                var oldBoard = this.saveBoardState();\n                var newBoard = Array.from({\n                    length: 4\n                }, function() {\n                    return Array(4).fill(0);\n                });\n                var score = 0;\n                for(var j = 0; j < 4; j++){\n                    var position = 0;\n                    for(var i = 0; i < 4; i++)if (board[i][j] !== 0) {\n                        if (newBoard[position][j] === board[i][j]) {\n                            newBoard[position][j] *= 2;\n                            score += newBoard[position][j];\n                            position++;\n                        } else if (newBoard[position][j] === 0) newBoard[position][j] = board[i][j];\n                        else {\n                            position++;\n                            newBoard[position][j] = board[i][j];\n                        }\n                    }\n                }\n                this.score += score;\n                this.board = newBoard;\n                if (this.hasBoardChanged(oldBoard, this.board)) this.addRandomTitle();\n                this.updateScoreDisplay();\n                return this.score;\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var board = this.board;\n                var oldBoard = this.saveBoardState();\n                var newBoard = Array.from({\n                    length: 4\n                }, function() {\n                    return Array(4).fill(0);\n                });\n                var score = 0;\n                for(var j = 0; j < 4; j++){\n                    var position = 3;\n                    for(var i = 3; i >= 0; i--)if (board[i][j] !== 0) {\n                        if (newBoard[position][j] === board[i][j]) {\n                            newBoard[position][j] *= 2;\n                            score += newBoard[position][j];\n                            position--;\n                        } else if (newBoard[position][j] === 0) newBoard[position][j] = board[i][j];\n                        else {\n                            position--;\n                            newBoard[position][j] = board[i][j];\n                        }\n                    }\n                }\n                this.score += score;\n                this.board = newBoard;\n                if (this.hasBoardChanged(oldBoard, this.board)) this.addRandomTitle();\n                this.updateScoreDisplay();\n                return this.score;\n            }\n        },\n        {\n            key: \"checkWin\",\n            value: function checkWin() {\n                for(var i = 0; i < 4; i++){\n                    for(var j = 0; j < 4; j++)if (this.board[i][j] === 2048) {\n                        this.showMessage(Game.gameStatuses.win);\n                        return true;\n                    }\n                }\n                return false;\n            }\n        },\n        {\n            key: \"checkLose\",\n            value: function checkLose() {\n                for(var i = 0; i < 4; i++)for(var j = 0; j < 4; j++){\n                    if (this.board[i][j] === 0) return false;\n                }\n                for(var i1 = 0; i1 < 4; i1++)for(var j1 = 0; j1 < 4; j1++){\n                    if (i1 < 3 && this.board[i1][j1] === this.board[i1 + 1][j1] || j1 < 3 && this.board[i1][j1] === this.board[i1][j1 + 1]) return false;\n                }\n                this.showMessage(Game.gameStatuses.lose);\n                return true;\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                if (this.checkWin()) return Game.gameStatuses.win;\n                else if (this.checkLose()) return Game.gameStatuses.lose;\n                else return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = Game.gameStatuses.playing;\n                this.initializeGame(\"start\");\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.status = Game.gameStatuses.idle;\n                this.initializeGame(\"Game restarted\");\n            }\n        },\n        {\n            key: \"showMessage\",\n            value: function showMessage(message) {\n                var messageContainer = document.querySelector(\".message-container\");\n                if (messageContainer) {\n                    messageContainer.querySelector(\".message-start\").classList.add(\"hidden\");\n                    messageContainer.querySelector(\".message-lose\").classList.add(\"hidden\");\n                    messageContainer.querySelector(\".message-win\").classList.add(\"hidden\");\n                }\n                if (message === Game.gameStatuses.win) messageContainer.querySelector(\".message-win\").classList.remove(\"hidden\");\n                else if (message === Game.gameStatuses.lose) messageContainer.querySelector(\".message-lose\").classList.remove(\"hidden\");\n            }\n        }\n    ]);\n    return Game;\n}();\n(0, $cd5a47cf8ef6d766$export$71511d61b312f219)($3d28d7f1aac198f5$var$Game, \"gameStatuses\", {\n    idle: \"idle\",\n    playing: \"playing\",\n    lose: \"lose\",\n    win: \"win\"\n});\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$startButton = document.getElementById(\"startButton\");\nvar $197cd56b15c33885$var$restartButton = document.getElementById(\"restartButton\");\ndocument.addEventListener(\"keydown\", $197cd56b15c33885$var$handleKeyPress);\n$197cd56b15c33885$var$restartButton.style.display = \"none\";\n$197cd56b15c33885$var$startButton.addEventListener(\"click\", function() {\n    $197cd56b15c33885$var$initializeGame();\n});\nfunction $197cd56b15c33885$var$initializeGame() {\n    $197cd56b15c33885$var$game.start();\n    $197cd56b15c33885$var$clearGameField();\n    $197cd56b15c33885$var$refreshTable($197cd56b15c33885$var$game.board);\n    $197cd56b15c33885$var$updateGameField($197cd56b15c33885$var$game.board);\n    $197cd56b15c33885$var$startButton.style.display = \"none\";\n    $197cd56b15c33885$var$restartButton.style.display = \"block\";\n}\nfunction $197cd56b15c33885$var$clearGameField() {\n    var cells = document.querySelectorAll(\".field-cell\");\n    cells.forEach(function(cell) {\n        cell.textContent = \"\";\n    });\n}\n$197cd56b15c33885$var$restartButton.addEventListener(\"click\", function() {\n    $197cd56b15c33885$var$game.restart();\n    $197cd56b15c33885$var$initializeGame();\n    document.addEventListener(\"keydown\", $197cd56b15c33885$var$handleKeyPress);\n});\nfunction $197cd56b15c33885$var$updateGameField(board) {\n    var cells = document.querySelectorAll(\".field-cell\");\n    cells.forEach(function(cell, index) {\n        var value = board[Math.floor(index / 4)][index % 4];\n        cell.textContent = value === 0 ? \"\" : value;\n    });\n    $197cd56b15c33885$var$checkGameStatus();\n}\nfunction $197cd56b15c33885$var$checkGameStatus() {\n    var gameStatus = $197cd56b15c33885$var$game.getStatus();\n    if (gameStatus === $3d28d7f1aac198f5$exports.gameStatuses.win || gameStatus === $3d28d7f1aac198f5$exports.gameStatuses.lose) document.removeEventListener(\"keydown\", $197cd56b15c33885$var$handleKeyPress);\n}\nfunction $197cd56b15c33885$var$handleKeyPress(e) {\n    var moveActions = {\n        ArrowLeft: function() {\n            return $197cd56b15c33885$var$game.moveLeft();\n        },\n        ArrowRight: function() {\n            return $197cd56b15c33885$var$game.moveRight();\n        },\n        ArrowUp: function() {\n            return $197cd56b15c33885$var$game.moveUp();\n        },\n        ArrowDown: function() {\n            return $197cd56b15c33885$var$game.moveDown();\n        }\n    };\n    var action = moveActions[e.key];\n    if (action) {\n        action();\n        $197cd56b15c33885$var$checkGameStatusAfterMove();\n    }\n}\nfunction $197cd56b15c33885$var$checkGameStatusAfterMove() {\n    if ($197cd56b15c33885$var$game.checkWin()) $197cd56b15c33885$var$checkGameStatus($3d28d7f1aac198f5$exports.gameStatuses.win);\n    else if ($197cd56b15c33885$var$game.checkLose()) $197cd56b15c33885$var$checkGameStatus($3d28d7f1aac198f5$exports.gameStatuses.lose);\n    $197cd56b15c33885$var$refreshTable($197cd56b15c33885$var$game.board);\n    $197cd56b15c33885$var$updateGameField($197cd56b15c33885$var$game.board);\n}\nfunction $197cd56b15c33885$var$refreshTable(initialState) {\n    var fieldRows = document.querySelectorAll(\".field-row\");\n    fieldRows.forEach(function(row, rowIndex) {\n        var columns = row.children;\n        Array.from(columns).forEach(function(cell, columnIndex) {\n            var stateCell = initialState[rowIndex][columnIndex];\n            cell.className = \"field-cell field-cell--\" + stateCell;\n            cell.innerText = stateCell > 0 ? stateCell : \"\";\n        });\n    });\n}\n\n})();\n//# sourceMappingURL=index.85212c41.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst startButton = document.getElementById('startButton');\nconst restartButton = document.getElementById('restartButton');\n\ndocument.addEventListener('keydown', handleKeyPress);\n\nrestartButton.style.display = 'none';\n\nstartButton.addEventListener('click', () => {\n  initializeGame();\n});\n\nfunction initializeGame() {\n  game.start();\n  clearGameField();\n  refreshTable(game.board);\n  updateGameField(game.board);\n\n  startButton.style.display = 'none';\n  restartButton.style.display = 'block';\n}\n\nfunction clearGameField() {\n  const cells = document.querySelectorAll('.field-cell');\n\n  cells.forEach((cell) => {\n    cell.textContent = '';\n  });\n}\n\nrestartButton.addEventListener('click', () => {\n  game.restart();\n  initializeGame();\n  document.addEventListener('keydown', handleKeyPress);\n});\n\nfunction updateGameField(board) {\n  const cells = document.querySelectorAll('.field-cell');\n\n  cells.forEach((cell, index) => {\n    const value = board[Math.floor(index / 4)][index % 4];\n\n    cell.textContent = value === 0 ? '' : value;\n  });\n\n  checkGameStatus();\n}\n\nfunction checkGameStatus() {\n  const gameStatus = game.getStatus();\n\n  if (\n    gameStatus === Game.gameStatuses.win ||\n    gameStatus === Game.gameStatuses.lose\n  ) {\n    document.removeEventListener('keydown', handleKeyPress);\n  }\n}\n\nfunction handleKeyPress(e) {\n  const moveActions = {\n    ArrowLeft: () => game.moveLeft(),\n    ArrowRight: () => game.moveRight(),\n    ArrowUp: () => game.moveUp(),\n    ArrowDown: () => game.moveDown(),\n  };\n\n  const action = moveActions[e.key];\n\n  if (action) {\n    action();\n    checkGameStatusAfterMove();\n  }\n}\n\nfunction checkGameStatusAfterMove() {\n  if (game.checkWin()) {\n    checkGameStatus(Game.gameStatuses.win);\n  } else if (game.checkLose()) {\n    checkGameStatus(Game.gameStatuses.lose);\n  }\n\n  refreshTable(game.board);\n  updateGameField(game.board);\n}\n\nfunction refreshTable(initialState) {\n  const fieldRows = document.querySelectorAll('.field-row');\n\n  fieldRows.forEach((row, rowIndex) => {\n    const columns = row.children;\n\n    Array.from(columns).forEach((cell, columnIndex) => {\n      const stateCell = initialState[rowIndex][columnIndex];\n\n      cell.className = 'field-cell field-cell--' + stateCell;\n      cell.innerText = stateCell > 0 ? stateCell : '';\n    });\n  });\n}\n","'use strict';\n\nclass Game {\n  static gameStatuses = {\n    idle: 'idle',\n    playing: 'playing',\n    lose: 'lose',\n    win: 'win',\n  };\n\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.board = initialState || this.createEmptyBoard();\n    this.score = 0;\n    this.status = Game.gameStatuses.idle;\n  }\n\n  saveBoardState() {\n    return JSON.parse(JSON.stringify(this.board));\n  }\n\n  hasBoardChanged(oldBoard, newBoard) {\n    for (let i = 0; i < oldBoard.length; i++) {\n      for (let j = 0; j < oldBoard[i].length; j++) {\n        if (oldBoard[i][j] !== newBoard[i][j]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  addCells(count = 1) {\n    for (let i = 0; i < count; i++) {\n      this.addRandomTitle();\n    }\n  }\n\n  initializeGame(message = '') {\n    this.board = this.createEmptyBoard();\n    this.score = 0;\n\n    this.addCells(2);\n\n    this.updateScoreDisplay();\n    this.showMessage(message);\n  }\n\n  updateScoreDisplay() {\n    const scoreElement = document.querySelector('.game-score');\n\n    if (scoreElement) {\n      scoreElement.textContent = this.score;\n    }\n  }\n\n  createEmptyBoard() {\n    return Array(4)\n      .fill(null)\n      .map(() => Array(4).fill(0));\n  }\n\n  updateBoardDisplay() {\n    const { board } = this;\n\n    const cells = document.querySelectorAll('.field-cell');\n\n    cells.forEach((cell, index) => {\n      const row = Math.floor(index / 4);\n      const col = index % 4;\n\n      cell.textContent = board[row][col] === 0 ? '' : board[row][col];\n      cell.className = 'field-cell';\n\n      if (board[row][col] !== 0) {\n        cell.classList.add(`tile-${board[row][col]}`);\n      }\n    });\n  }\n\n  addRandomTitle() {\n    const emptyCells = [];\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.board[i][j] === 0) {\n          emptyCells.push([i, j]);\n        }\n      }\n    }\n\n    if (emptyCells.length === 0) {\n      return;\n    }\n\n    const [randomRow, randomCol] =\n      emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n    this.board[randomRow][randomCol] = Math.random() < 0.9 ? 2 : 4;\n\n    this.updateBoardDisplay();\n  }\n\n  moveLeft() {\n    const { board } = this;\n    const oldBoard = this.saveBoardState();\n    const newBoard = Array.from({ length: 4 }, () => Array(4).fill(0));\n    let score = 0;\n\n    for (let i = 0; i < 4; i++) {\n      let position = 0;\n\n      for (let j = 0; j < 4; j++) {\n        if (board[i][j] !== 0) {\n          if (newBoard[i][position] === board[i][j]) {\n            newBoard[i][position] *= 2;\n            score += newBoard[i][position];\n\n            position++;\n          } else if (newBoard[i][position] === 0) {\n            newBoard[i][position] = board[i][j];\n          } else {\n            position++;\n            newBoard[i][position] = board[i][j];\n          }\n        }\n      }\n    }\n\n    this.score += score;\n\n    this.board = newBoard;\n\n    if (this.hasBoardChanged(oldBoard, this.board)) {\n      this.addRandomTitle();\n    }\n\n    this.updateBoardDisplay();\n    this.updateScoreDisplay();\n\n    return this.score;\n  }\n\n  moveRight() {\n    const { board } = this;\n    const oldBoard = this.saveBoardState();\n    const newBoard = Array.from({ length: 4 }, () => Array(4).fill(0));\n    let score = 0;\n\n    for (let i = 0; i < 4; i++) {\n      let position = 3;\n\n      for (let j = 3; j >= 0; j--) {\n        if (board[i][j] !== 0) {\n          if (newBoard[i][position] === board[i][j]) {\n            newBoard[i][position] *= 2;\n            score += newBoard[i][position];\n            position--;\n          } else if (newBoard[i][position] === 0) {\n            newBoard[i][position] = board[i][j];\n          } else {\n            position--;\n            newBoard[i][position] = board[i][j];\n          }\n        }\n      }\n    }\n\n    this.score += score;\n    this.board = newBoard;\n\n    if (this.hasBoardChanged(oldBoard, this.board)) {\n      this.addRandomTitle();\n    }\n\n    this.updateScoreDisplay();\n\n    return this.score;\n  }\n\n  moveUp() {\n    const { board } = this;\n    const oldBoard = this.saveBoardState();\n    const newBoard = Array.from({ length: 4 }, () => Array(4).fill(0));\n    let score = 0;\n\n    for (let j = 0; j < 4; j++) {\n      let position = 0;\n\n      for (let i = 0; i < 4; i++) {\n        if (board[i][j] !== 0) {\n          if (newBoard[position][j] === board[i][j]) {\n            newBoard[position][j] *= 2;\n            score += newBoard[position][j];\n            position++;\n          } else if (newBoard[position][j] === 0) {\n            newBoard[position][j] = board[i][j];\n          } else {\n            position++;\n            newBoard[position][j] = board[i][j];\n          }\n        }\n      }\n    }\n\n    this.score += score;\n    this.board = newBoard;\n\n    if (this.hasBoardChanged(oldBoard, this.board)) {\n      this.addRandomTitle();\n    }\n\n    this.updateScoreDisplay();\n\n    return this.score;\n  }\n\n  moveDown() {\n    const { board } = this;\n    const oldBoard = this.saveBoardState();\n    const newBoard = Array.from({ length: 4 }, () => Array(4).fill(0));\n    let score = 0;\n\n    for (let j = 0; j < 4; j++) {\n      let position = 3;\n\n      for (let i = 3; i >= 0; i--) {\n        if (board[i][j] !== 0) {\n          if (newBoard[position][j] === board[i][j]) {\n            newBoard[position][j] *= 2;\n            score += newBoard[position][j];\n            position--;\n          } else if (newBoard[position][j] === 0) {\n            newBoard[position][j] = board[i][j];\n          } else {\n            position--;\n            newBoard[position][j] = board[i][j];\n          }\n        }\n      }\n    }\n\n    this.score += score;\n    this.board = newBoard;\n\n    if (this.hasBoardChanged(oldBoard, this.board)) {\n      this.addRandomTitle();\n    }\n\n    this.updateScoreDisplay();\n\n    return this.score;\n  }\n\n  checkWin() {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.board[i][j] === 2048) {\n          this.showMessage(Game.gameStatuses.win);\n\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  checkLose() {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.board[i][j] === 0) {\n          return false;\n        }\n      }\n    }\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (\n          (i < 3 && this.board[i][j] === this.board[i + 1][j]) ||\n          (j < 3 && this.board[i][j] === this.board[i][j + 1])\n        ) {\n          return false;\n        }\n      }\n    }\n\n    this.showMessage(Game.gameStatuses.lose);\n\n    return true;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.board;\n  }\n\n  getStatus() {\n    if (this.checkWin()) {\n      return Game.gameStatuses.win;\n    } else if (this.checkLose()) {\n      return Game.gameStatuses.lose;\n    } else {\n      return this.status;\n    }\n  }\n\n  start() {\n    this.status = Game.gameStatuses.playing;\n    this.initializeGame('start');\n  }\n\n  restart() {\n    this.status = Game.gameStatuses.idle;\n    this.initializeGame('Game restarted');\n  }\n\n  showMessage(message) {\n    const messageContainer = document.querySelector('.message-container');\n\n    if (messageContainer) {\n      messageContainer.querySelector('.message-start').classList.add('hidden');\n      messageContainer.querySelector('.message-lose').classList.add('hidden');\n      messageContainer.querySelector('.message-win').classList.add('hidden');\n    }\n\n    if (message === Game.gameStatuses.win) {\n      messageContainer.querySelector('.message-win').classList.remove('hidden');\n    } else if (message === Game.gameStatuses.lose) {\n      messageContainer\n        .querySelector('.message-lose')\n        .classList.remove('hidden');\n    }\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","import { _ as _array_with_holes } from \"./_array_with_holes.js\";\nimport { _ as _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _ as _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n"],"names":["key","value","$3d28d7f1aac198f5$exports","$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$3d28d7f1aac198f5$var$Game","protoProps","Game","initialState","arguments","instance","Constructor","TypeError","board","createEmptyBoard","score","status","gameStatuses","idle","JSON","parse","stringify","oldBoard","newBoard","j","count","addRandomTitle","message","addCells","updateScoreDisplay","showMessage","scoreElement","document","querySelector","textContent","fill","map","cells","querySelectorAll","forEach","cell","index","row","Math","floor","col","className","classList","add","concat","emptyCells","push","_emptyCells_Math_floor","isArray","random","_s","_e","_i","Symbol","iterator","_arr","_n","_d","call","next","done","err","o","minLen","n","Object","prototype","toString","slice","constructor","name","from","test","randomRow","randomCol","updateBoardDisplay","saveBoardState","position","hasBoardChanged","win","i1","j1","lose","checkWin","checkLose","playing","initializeGame","messageContainer","remove","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","obj","$197cd56b15c33885$var$game","$197cd56b15c33885$var$startButton","getElementById","$197cd56b15c33885$var$restartButton","$197cd56b15c33885$var$initializeGame","start","$197cd56b15c33885$var$refreshTable","$197cd56b15c33885$var$updateGameField","style","display","$197cd56b15c33885$var$checkGameStatus","gameStatus","getStatus","removeEventListener","$197cd56b15c33885$var$handleKeyPress","e","action","moveActions","ArrowLeft","moveLeft","ArrowRight","moveRight","ArrowUp","moveUp","ArrowDown","moveDown","fieldRows","rowIndex","children","columnIndex","stateCell","innerText","addEventListener","restart"],"version":3,"file":"index.85212c41.js.map"}